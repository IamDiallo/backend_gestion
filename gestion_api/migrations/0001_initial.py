# Generated by Django 4.2.20 on 2025-09-28 13:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('account_type', models.CharField(choices=[('internal', 'Compte Interne'), ('bank', 'Compte Bancaire'), ('cash', 'Caisse'), ('client', 'Compte Client'), ('supplier', 'Compte Fournisseur')], max_length=20)),
                ('initial_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Compte',
                'verbose_name_plural': 'Comptes',
            },
        ),
        migrations.CreateModel(
            name='ChargeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Type de charge',
                'verbose_name_plural': 'Types de charge',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact_person', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.account')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='ClientGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Groupe de clients',
                'verbose_name_plural': 'Groupes de clients',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=3, unique=True)),
                ('symbol', models.CharField(max_length=5)),
                ('is_base', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Devise',
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='DeliveryNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('confirmed', 'Confirmé'), ('delivered', 'Livré'), ('cancelled', 'Annulé')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.client')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bon de livraison',
                'verbose_name_plural': 'Bons de livraison',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('department', models.CharField(default='Général', max_length=100)),
                ('email', models.EmailField(default='', max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('hire_date', models.DateField(default=django.utils.timezone.now)),
                ('salary', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Employé',
                'verbose_name_plural': 'Employés',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('cancelled', 'Annulé')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventaire',
                'verbose_name_plural': 'Inventaires',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Mode de paiement',
                'verbose_name_plural': 'Modes de paiement',
            },
        ),
        migrations.CreateModel(
            name='PriceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Groupe de prix',
                'verbose_name_plural': 'Groupes de prix',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('reference', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('purchase_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_raw_material', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('min_stock_level', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
            },
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productions', to='gestion_api.product')),
            ],
            options={
                'verbose_name': 'Production',
                'verbose_name_plural': 'Productions',
            },
        ),
        migrations.CreateModel(
            name='ProductTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Transfert de produit',
                'verbose_name_plural': 'Transferts de produits',
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('sent', 'Envoyé'), ('accepted', 'Accepté'), ('rejected', 'Rejeté'), ('expired', 'Expiré')], default='draft', max_length=20)),
                ('is_converted', models.BooleanField(default=False, help_text='Si ce devis a été converti en vente')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=15)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quotes', to='gestion_api.client')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('pending', 'En attente'), ('confirmed', 'Confirmé'), ('payment_pending', 'Paiement en attente'), ('partially_paid', 'Partiellement payé'), ('paid', 'Payé'), ('shipped', 'Expédié'), ('delivered', 'Livré'), ('completed', 'Terminé'), ('cancelled', 'Annulé')], default='draft', max_length=20)),
                ('payment_status', models.CharField(choices=[('unpaid', 'Non payé'), ('partially_paid', 'Partiellement payé'), ('paid', 'Payé'), ('overpaid', 'Surpayé')], default='unpaid', max_length=20)),
                ('workflow_state', models.CharField(choices=[('draft', 'Brouillon'), ('pending', 'En attente'), ('confirmed', 'Confirmé'), ('payment_pending', 'Paiement en attente'), ('partially_paid', 'Partiellement payé'), ('paid', 'Payé'), ('shipped', 'Expédié'), ('delivered', 'Livré'), ('completed', 'Terminé'), ('cancelled', 'Annulé')], default='draft', max_length=50)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=15)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('remaining_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('delivery_notes', models.ManyToManyField(blank=True, related_name='sales', to='gestion_api.deliverynote')),
            ],
            options={
                'verbose_name': 'Vente',
                'verbose_name_plural': 'Ventes',
            },
        ),
        migrations.CreateModel(
            name='StockReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvé'), ('rejected', 'Rejeté')], default='pending', max_length=20)),
                ('reason', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.sale')),
            ],
            options={
                'verbose_name': 'Retour de stock',
                'verbose_name_plural': 'Retours de stock',
            },
        ),
        migrations.CreateModel(
            name='StockSupply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('partial', 'Partiellement reçu'), ('received', 'Reçu'), ('cancelled', 'Annulé')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Approvisionnement',
                'verbose_name_plural': 'Approvisionnements',
            },
        ),
        migrations.CreateModel(
            name='StockTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('partial', 'Partiellement transféré'), ('completed', 'Terminé'), ('cancelled', 'Annulé')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transfert de stock',
                'verbose_name_plural': 'Transferts de stock',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='supplier', to='gestion_api.account')),
            ],
            options={
                'verbose_name': 'Fournisseur',
                'verbose_name_plural': 'Fournisseurs',
            },
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('date', models.DateField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplies', to='gestion_api.supplier')),
            ],
            options={
                'verbose_name': 'Approvisionnement',
                'verbose_name_plural': 'Approvisionnements',
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField(blank=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Zone/Magasin',
                'verbose_name_plural': 'Zones/Magasins',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('consultant', 'Consultant'), ('supervisor', 'Supervisor'), ('commercial', 'Commercial'), ('cashier', 'Cashier')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='gestion_api.zone')),
            ],
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('symbol', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Unité de mesure',
                'verbose_name_plural': 'Unités de mesure',
            },
        ),
        migrations.CreateModel(
            name='SupplyItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_api.product')),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='gestion_api.supply')),
            ],
            options={
                'verbose_name': "Élément d'approvisionnement",
                'verbose_name_plural': "Éléments d'approvisionnement",
            },
        ),
        migrations.AddField(
            model_name='supply',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_api.zone'),
        ),
        migrations.CreateModel(
            name='SupplierPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.account')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.paymentmethod')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.supplier')),
            ],
            options={
                'verbose_name': 'Règlement fournisseur',
                'verbose_name_plural': 'Règlements fournisseurs',
            },
        ),
        migrations.CreateModel(
            name='StockTransferItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('transferred_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.product')),
                ('transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='gestion_api.stocktransfer')),
            ],
            options={
                'verbose_name': 'Élément de transfert',
                'verbose_name_plural': 'Éléments de transfert',
            },
        ),
        migrations.AddField(
            model_name='stocktransfer',
            name='from_zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transfers_from', to='gestion_api.zone'),
        ),
        migrations.AddField(
            model_name='stocktransfer',
            name='to_zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transfers_to', to='gestion_api.zone'),
        ),
        migrations.CreateModel(
            name='StockSupplyItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('received_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.product')),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='gestion_api.stocksupply')),
            ],
            options={
                'verbose_name': "Élément d'approvisionnement",
                'verbose_name_plural': "Éléments d'approvisionnement",
            },
        ),
        migrations.AddField(
            model_name='stocksupply',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.supplier'),
        ),
        migrations.AddField(
            model_name='stocksupply',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.zone'),
        ),
        migrations.CreateModel(
            name='StockReturnItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.product')),
                ('stock_return', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='gestion_api.stockreturn')),
            ],
            options={
                'verbose_name': 'Élément de retour',
                'verbose_name_plural': 'Éléments de retour',
            },
        ),
        migrations.CreateModel(
            name='StockCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('transaction_type', models.CharField(choices=[('supply', 'Approvisionnement'), ('sale', 'Vente'), ('transfer_in', 'Transfert entrant'), ('transfer_out', 'Transfert sortant'), ('inventory', "Ajustement d'inventaire"), ('production', 'Production'), ('return', 'Retour')], max_length=20)),
                ('reference', models.CharField(max_length=50)),
                ('quantity_in', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('quantity_out', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.product')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.zone')),
            ],
            options={
                'verbose_name': 'Fiche de stock',
                'verbose_name_plural': 'Fiches de stock',
                'ordering': ['product', 'zone', '-date'],
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_api.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='gestion_api.sale')),
            ],
            options={
                'verbose_name': 'Élément de vente',
                'verbose_name_plural': 'Éléments de vente',
            },
        ),
        migrations.CreateModel(
            name='SaleCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(blank=True)),
                ('charge_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.chargetype')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charges', to='gestion_api.sale')),
            ],
            options={
                'verbose_name': 'Charge de vente',
                'verbose_name_plural': 'Charges de vente',
            },
        ),
        migrations.AddField(
            model_name='sale',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.zone'),
        ),
        migrations.CreateModel(
            name='QuoteItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('date', models.DateField()),
                ('reference', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.product')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='gestion_api.quote')),
                ('sale', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gestion_api.sale')),
            ],
            options={
                'verbose_name': 'Account Payment',
                'verbose_name_plural': 'Account Payments',
            },
        ),
        migrations.CreateModel(
            name='ProductTransferItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_api.product')),
                ('transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='gestion_api.producttransfer')),
            ],
            options={
                'verbose_name': 'Élément de transfert',
                'verbose_name_plural': 'Éléments de transfert',
            },
        ),
        migrations.AddField(
            model_name='producttransfer',
            name='destination_zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_in', to='gestion_api.zone'),
        ),
        migrations.AddField(
            model_name='producttransfer',
            name='source_zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_out', to='gestion_api.zone'),
        ),
        migrations.CreateModel(
            name='ProductionMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_api.product')),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='gestion_api.production')),
            ],
            options={
                'verbose_name': 'Matière première utilisée',
                'verbose_name_plural': 'Matières premières utilisées',
            },
        ),
        migrations.AddField(
            model_name='production',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_api.zone'),
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Catégorie de produit',
                'verbose_name_plural': 'Catégories de produits',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestion_api.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='unit',
            field=models.ForeignKey(db_column='unit', null=True, on_delete=django.db.models.deletion.PROTECT, to='gestion_api.unitofmeasure'),
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('date', models.DateField()),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('sent', 'Envoyé'), ('paid', 'Payé'), ('overdue', 'En retard'), ('cancelled', 'Annulé')], default='draft', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='gestion_api.sale')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('actual_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('difference', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='gestion_api.inventory')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.product')),
            ],
            options={
                'verbose_name': "Élément d'inventaire",
                'verbose_name_plural': "Éléments d'inventaire",
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.zone'),
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Catégorie de dépense',
                'verbose_name_plural': 'Expense categories',
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('pending', 'En attente'), ('approved', 'Approuvé'), ('paid', 'Payé'), ('cancelled', 'Annulé')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.account')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.expensecategory')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.paymentmethod')),
            ],
            options={
                'verbose_name': 'Dépense',
                'verbose_name_plural': 'Dépenses',
            },
        ),
        migrations.CreateModel(
            name='DeliveryNoteItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('delivery_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='gestion_api.deliverynote')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.product')),
            ],
            options={
                'verbose_name': 'Élément de livraison',
                'verbose_name_plural': 'Éléments de livraison',
            },
        ),
        migrations.AddField(
            model_name='deliverynote',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.zone'),
        ),
        migrations.CreateModel(
            name='ClientPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.account')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.client')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.paymentmethod')),
            ],
            options={
                'verbose_name': 'Règlement client',
                'verbose_name_plural': 'Règlements clients',
            },
        ),
        migrations.AddField(
            model_name='client',
            name='price_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestion_api.pricegroup'),
        ),
        migrations.CreateModel(
            name='CashReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('allocated_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='gestion_api.account')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='gestion_api.client')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='gestion_api.paymentmethod')),
                ('sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='gestion_api.sale')),
            ],
            options={
                'verbose_name': 'Encaissement',
                'verbose_name_plural': 'Encaissements',
            },
        ),
        migrations.CreateModel(
            name='AccountTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('exchange_rate', models.DecimalField(decimal_places=4, default=1, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('from_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transfers_from', to='gestion_api.account')),
                ('to_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transfers_to', to='gestion_api.account')),
            ],
            options={
                'verbose_name': 'Virement',
                'verbose_name_plural': 'Virements',
            },
        ),
        migrations.CreateModel(
            name='AccountStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('transaction_type', models.CharField(choices=[('client_payment', 'Règlement client'), ('supplier_payment', 'Règlement fournisseur'), ('transfer_in', 'Virement entrant'), ('transfer_out', 'Virement sortant'), ('cash_receipt', 'Encaissement'), ('cash_payment', 'Décaissement'), ('expense', 'Dépense'), ('sale', 'Vente'), ('purchase', 'Achat'), ('deposit', 'Dépôt')], max_length=20)),
                ('reference', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('debit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('credit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.account')),
            ],
            options={
                'verbose_name': 'Mouvement de compte',
                'verbose_name_plural': 'Mouvements de compte',
                'ordering': ['account', '-date'],
            },
        ),
        migrations.AddField(
            model_name='account',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_api.currency'),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='gestion_api.product')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='gestion_api.zone')),
            ],
            options={
                'verbose_name': 'Stock',
                'verbose_name_plural': 'Stocks',
                'unique_together': {('product', 'zone')},
            },
        ),
    ]
