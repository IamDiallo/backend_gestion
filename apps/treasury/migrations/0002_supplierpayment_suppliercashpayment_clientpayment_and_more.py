# Generated by Django 4.2.20 on 2025-10-11 13:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app_settings', '0001_initial'),
        ('partners', '0001_initial'),
        # Removed gestion_api dependency - legacy app deprecated
        # ('gestion_api', '0004_remove_account_currency_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('treasury', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SupplierPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplier_payments', to='treasury.account')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treasury_supplier_payments_created', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='treasury_supplier_payments', to='app_settings.paymentmethod')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='treasury_payments', to='partners.supplier')),
            ],
            options={
                'verbose_name': 'Règlement fournisseur',
                'verbose_name_plural': 'Règlements fournisseurs',
                'db_table': 'gestion_api_supplierpayment',
            },
        ),
        migrations.CreateModel(
            name='SupplierCashPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('allocated_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='supplier_cash_payments', to='treasury.account')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treasury_supplier_cash_payments_created', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='treasury_supplier_cash_payments', to='app_settings.paymentmethod')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='treasury_cash_payments', to='partners.supplier')),
                ('supply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='gestion_api.stocksupply')),
            ],
            options={
                'verbose_name': 'Paiement fournisseur',
                'verbose_name_plural': 'Paiements fournisseurs',
                'db_table': 'gestion_api_suppliercashpayment',
            },
        ),
        migrations.CreateModel(
            name='ClientPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='client_payments', to='treasury.account')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='treasury_payments', to='partners.client')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treasury_client_payments_created', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='treasury_client_payments', to='app_settings.paymentmethod')),
            ],
            options={
                'verbose_name': 'Règlement client',
                'verbose_name_plural': 'Règlements clients',
                'db_table': 'gestion_api_clientpayment',
            },
        ),
        migrations.CreateModel(
            name='CashReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('allocated_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cash_receipts', to='treasury.account')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='treasury_cash_receipts', to='partners.client')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treasury_cash_receipts_created', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='treasury_cash_receipts', to='app_settings.paymentmethod')),
                ('sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='gestion_api.sale')),
            ],
            options={
                'verbose_name': 'Encaissement',
                'verbose_name_plural': 'Encaissements',
                'db_table': 'gestion_api_cashreceipt',
            },
        ),
        migrations.CreateModel(
            name='AccountTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('exchange_rate', models.DecimalField(decimal_places=4, default=1, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treasury_transfers_created', to=settings.AUTH_USER_MODEL)),
                ('from_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transfers_from', to='treasury.account')),
                ('to_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transfers_to', to='treasury.account')),
            ],
            options={
                'verbose_name': 'Virement',
                'verbose_name_plural': 'Virements',
                'db_table': 'gestion_api_accounttransfer',
            },
        ),
        migrations.CreateModel(
            name='AccountStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('transaction_type', models.CharField(choices=[('client_payment', 'Règlement client'), ('supplier_payment', 'Règlement fournisseur'), ('transfer_in', 'Virement entrant'), ('transfer_out', 'Virement sortant'), ('cash_receipt', 'Encaissement'), ('cash_payment', 'Décaissement'), ('expense', 'Dépense'), ('sale', 'Vente'), ('purchase', 'Achat'), ('deposit', 'Dépôt')], max_length=20)),
                ('reference', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('debit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('credit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='statements', to='treasury.account')),
            ],
            options={
                'verbose_name': 'Mouvement de compte',
                'verbose_name_plural': 'Mouvements de compte',
                'db_table': 'gestion_api_accountstatement',
                'ordering': ['account', '-date'],
            },
        ),
    ]
